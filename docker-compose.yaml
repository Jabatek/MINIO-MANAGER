version: '3.7'

# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2022-01-08T03-11-54Z
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - '9000'
    - '9001'
  environment:
    MINIO_ROOT_USER: minio
    MINIO_ROOT_PASSWORD: minio123
  healthcheck:
    test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
    interval: 30s
    timeout: 20s
    retries: 3

# starts 4 docker containers running minio server instances.
# using nginx reverse proxy, load balancing, you can access
# it through port 9000.
services:
  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2
    networks:
      backend:
        ipv4_address: "192.168.2.3"

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2
    networks:
      backend:
        ipv4_address: "192.168.2.4"

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - data3-1:/data1
      - data3-2:/data2
    networks:
      backend:
        ipv4_address: "192.168.2.5"

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - data4-1:/data1
      - data4-2:/data2
    networks:
      backend:
        ipv4_address: "192.168.2.6"

  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      backend:
        ipv4_address: "192.168.2.10"
    ports:
      - '9000:9000'
      - '9001:9001'
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4

  minio_manager_server:
    build: ./minio-manager-server
    container_name: minio_manager_server
    hostname: minio_manager_server
    command: npm run start
    networks:
      backend:
        ipv4_address: 192.168.2.30
    ports:
      - '3000:3000'
    volumes:
      - ./minio_server_manager_setting:/app/setting
    depends_on:
      - nginx

  minio_manager:
    build: ./minio-manager-client
    container_name: minio_manager_client
    hostname: minio_manager_client
    environment:
      - VUE_APP_SERVER_ENDPOINT=http://192.168.2.30:3000
    command: npm run serve
    ports:
      - '4000:8080'
    depends_on:
      - minio_server_manager_docker

networks:
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: "192.168.2.0/20"

## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:
